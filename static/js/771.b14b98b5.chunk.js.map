{"version":3,"file":"static/js/771.b14b98b5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/redux/selector.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/pages/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/pages/Home/styles.module.css?f52c"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../redux/contactSlice';\nimport { addContact } from '../redux/operations';\nimport styles from '../styles.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isNameExist = contacts.find(\n      contact => typeof contact.name === 'string' && contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameExist) {\n      alert(`${name} already exists in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNameChange}\n        placeholder=\"Name\"\n        className={styles.input}\n        required\n      />\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleNumberChange}\n        placeholder=\"Phone number\"\n        className={styles.input}\n        required\n      />\n      <button type=\"submit\" className={styles.button}>\n        Add to contacts\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectErrors = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector([selectContacts, selectFilter], (contacts, filterValue) => {\n  const filteredContacts = contacts?.filter(\n    contact => contact.name.toLowerCase().includes(filterValue) || contact.number.toLowerCase().includes(filterValue)\n  );\n\n  const uniqueContacts = filteredContacts?.filter(\n    (contact, index, self) => index === self.findIndex(c => c.name.toLowerCase() === contact.name.toLowerCase())\n  );\n\n  return uniqueContacts;\n});\n","import PropTypes from 'prop-types';\n\nexport const ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li key={id}>\n      {name}: {number}\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { isLogged } from 'components/redux/auth/selectors';\nimport { selectVisibleContacts } from 'components/redux/selector';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../redux/operations';\nimport ContactListItem from './ContactListItem';\nimport { isLoading } from 'components/redux/auth/selectors';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const logIn = useSelector(isLogged);\n  const dispatch = useDispatch();\n  const loading = useSelector(isLoading)\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch, logIn]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id)).catch(error => console.error(error));\n  };\n\n  return (\n    <ul>\n      {loading? <Loader size={'100'}/> :contacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} onDeleteContact={() => handleDeleteContact(id)} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../redux/filterSlice';\nimport { selectFilter } from '../redux/selector';\nimport styles from \"../styles.module.css\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = (event) => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={filter}\n          placeholder=\"Name\"\n          onChange={handleFilterChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","import ContactForm from '../../ContactForm/ContactForm';\nimport ContactList from '../../ContactList/ContactList';\nimport Filter from '../../Filter/Filter';\nimport styles from '../../styles.module.css';\nimport css from '../Home/styles.module.css';\n\nconst Contacts = () => {\n  return (\n    <div className={css.container}>\n      <div className={css.stars}></div>\n      <div className={css.stars2}></div>\n      <div className={css.stars3}></div>\n      <div className={styles.contact_page_container}>\n        <div className={styles.container_contact}>\n          <h1>Name</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"stars\":\"styles_stars__8PGWs\",\"animStar\":\"styles_animStar__67xXU\",\"stars2\":\"styles_stars2__svBMf\",\"stars3\":\"styles_stars3__fjvJp\",\"title\":\"styles_title__MHfNd\"};"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","className","styles","onSubmit","event","preventDefault","find","contact","toLowerCase","alert","addContact","type","value","onChange","target","placeholder","required","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectVisibleContacts","items","filterValue","filteredContacts","includes","index","self","c","id","onDeleteContact","onClick","logIn","isLogged","loading","isLoading","useEffect","fetchContacts","Loader","size","ContactListItem","deleteContact","catch","error","console","handleDeleteContact","setFilter","css"],"sourceRoot":""}